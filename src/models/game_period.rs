/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct GamePeriod {
    #[serde(rename = "periodType", skip_serializing_if = "Option::is_none")]
    pub period_type: Option<String>,
    #[serde(rename = "startTime", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
    #[serde(rename = "endTime", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<String>,
    #[serde(rename = "num", skip_serializing_if = "Option::is_none")]
    pub num: Option<f32>,
    #[serde(rename = "ordinalNum", skip_serializing_if = "Option::is_none")]
    pub ordinal_num: Option<String>,
    #[serde(rename = "home", skip_serializing_if = "Option::is_none")]
    pub home: Option<crate::models::GamePeriodHome>,
    #[serde(rename = "away", skip_serializing_if = "Option::is_none")]
    pub away: Option<crate::models::GamePeriodAway>,
}

impl GamePeriod {
    pub fn new() -> GamePeriod {
        GamePeriod {
            period_type: None,
            start_time: None,
            end_time: None,
            num: None,
            ordinal_num: None,
            home: None,
            away: None,
        }
    }
}


