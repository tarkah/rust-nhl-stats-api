/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct PhotoCuts {
    #[serde(rename = "aspectRatio", skip_serializing_if = "Option::is_none")]
    pub aspect_ratio: Option<String>,
    #[serde(rename = "width", skip_serializing_if = "Option::is_none")]
    pub width: Option<f32>,
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<f32>,
    #[serde(rename = "src", skip_serializing_if = "Option::is_none")]
    pub src: Option<String>,
    #[serde(rename = "at2x", skip_serializing_if = "Option::is_none")]
    pub at2x: Option<String>,
    #[serde(rename = "at3x", skip_serializing_if = "Option::is_none")]
    pub at3x: Option<String>,
}

impl PhotoCuts {
    pub fn new() -> PhotoCuts {
        PhotoCuts {
            aspect_ratio: None,
            width: None,
            height: None,
            src: None,
            at2x: None,
            at3x: None,
        }
    }
}


