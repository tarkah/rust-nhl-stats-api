/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct GameBoxscoreTeamPlayersStatsSkaterStats {
    #[serde(rename = "timeOnIce", skip_serializing_if = "Option::is_none")]
    pub time_on_ice: Option<String>,
    #[serde(rename = "assists", skip_serializing_if = "Option::is_none")]
    pub assists: Option<f32>,
    #[serde(rename = "goals", skip_serializing_if = "Option::is_none")]
    pub goals: Option<f32>,
    #[serde(rename = "shots", skip_serializing_if = "Option::is_none")]
    pub shots: Option<f32>,
    #[serde(rename = "hits", skip_serializing_if = "Option::is_none")]
    pub hits: Option<f32>,
    #[serde(rename = "powerPlayGoals", skip_serializing_if = "Option::is_none")]
    pub power_play_goals: Option<f32>,
    #[serde(rename = "powerPlayAssists", skip_serializing_if = "Option::is_none")]
    pub power_play_assists: Option<f32>,
    #[serde(rename = "penaltyMinutes", skip_serializing_if = "Option::is_none")]
    pub penalty_minutes: Option<f32>,
    #[serde(rename = "faceOffWins", skip_serializing_if = "Option::is_none")]
    pub face_off_wins: Option<f32>,
    #[serde(rename = "faceoffTaken", skip_serializing_if = "Option::is_none")]
    pub faceoff_taken: Option<f32>,
    #[serde(rename = "takeaways", skip_serializing_if = "Option::is_none")]
    pub takeaways: Option<f32>,
    #[serde(rename = "giveaways", skip_serializing_if = "Option::is_none")]
    pub giveaways: Option<f32>,
    #[serde(rename = "shortHandedGoals", skip_serializing_if = "Option::is_none")]
    pub short_handed_goals: Option<f32>,
    #[serde(rename = "shortHandedAssists", skip_serializing_if = "Option::is_none")]
    pub short_handed_assists: Option<f32>,
    #[serde(rename = "blocked", skip_serializing_if = "Option::is_none")]
    pub blocked: Option<f32>,
    #[serde(rename = "plusMinus", skip_serializing_if = "Option::is_none")]
    pub plus_minus: Option<f32>,
    #[serde(rename = "evenTimeOnIce", skip_serializing_if = "Option::is_none")]
    pub even_time_on_ice: Option<String>,
    #[serde(rename = "powerPlayTimeOnIce", skip_serializing_if = "Option::is_none")]
    pub power_play_time_on_ice: Option<String>,
    #[serde(rename = "shortHandedTimeOnIce", skip_serializing_if = "Option::is_none")]
    pub short_handed_time_on_ice: Option<String>,
}

impl GameBoxscoreTeamPlayersStatsSkaterStats {
    pub fn new() -> GameBoxscoreTeamPlayersStatsSkaterStats {
        GameBoxscoreTeamPlayersStatsSkaterStats {
            time_on_ice: None,
            assists: None,
            goals: None,
            shots: None,
            hits: None,
            power_play_goals: None,
            power_play_assists: None,
            penalty_minutes: None,
            face_off_wins: None,
            faceoff_taken: None,
            takeaways: None,
            giveaways: None,
            short_handed_goals: None,
            short_handed_assists: None,
            blocked: None,
            plus_minus: None,
            even_time_on_ice: None,
            power_play_time_on_ice: None,
            short_handed_time_on_ice: None,
        }
    }
}


