/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct GamePlayResult {
    #[serde(rename = "event", skip_serializing_if = "Option::is_none")]
    pub event: Option<String>,
    #[serde(rename = "eventCode", skip_serializing_if = "Option::is_none")]
    pub event_code: Option<String>,
    #[serde(rename = "eventTypeId", skip_serializing_if = "Option::is_none")]
    pub event_type_id: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl GamePlayResult {
    pub fn new() -> GamePlayResult {
        GamePlayResult {
            event: None,
            event_code: None,
            event_type_id: None,
            description: None,
        }
    }
}


