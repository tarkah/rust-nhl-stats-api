/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct DraftPicks {
    #[serde(rename = "year", skip_serializing_if = "Option::is_none")]
    pub year: Option<f32>,
    #[serde(rename = "round", skip_serializing_if = "Option::is_none")]
    pub round: Option<String>,
    #[serde(rename = "pickOverall", skip_serializing_if = "Option::is_none")]
    pub pick_overall: Option<f32>,
    #[serde(rename = "pickInRound", skip_serializing_if = "Option::is_none")]
    pub pick_in_round: Option<f32>,
    #[serde(rename = "team", skip_serializing_if = "Option::is_none")]
    pub team: Option<crate::models::DraftTeam>,
    #[serde(rename = "prospect", skip_serializing_if = "Option::is_none")]
    pub prospect: Option<crate::models::DraftProspect>,
}

impl DraftPicks {
    pub fn new() -> DraftPicks {
        DraftPicks {
            year: None,
            round: None,
            pick_overall: None,
            pick_in_round: None,
            team: None,
            prospect: None,
        }
    }
}


