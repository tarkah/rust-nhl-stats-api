/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct TeamNextGameScheduleGames {
    #[serde(rename = "gamePk", skip_serializing_if = "Option::is_none")]
    pub game_pk: Option<f32>,
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    #[serde(rename = "gameType", skip_serializing_if = "Option::is_none")]
    pub game_type: Option<String>,
    #[serde(rename = "season", skip_serializing_if = "Option::is_none")]
    pub season: Option<String>,
    #[serde(rename = "gameDate", skip_serializing_if = "Option::is_none")]
    pub game_date: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::TeamNextGameScheduleStatus>,
    #[serde(rename = "teams", skip_serializing_if = "Option::is_none")]
    pub teams: Option<crate::models::TeamNextGameScheduleTeams>,
    #[serde(rename = "venue", skip_serializing_if = "Option::is_none")]
    pub venue: Option<crate::models::GameGameDataVenue>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<crate::models::ScheduleGameContent>,
}

impl TeamNextGameScheduleGames {
    pub fn new() -> TeamNextGameScheduleGames {
        TeamNextGameScheduleGames {
            game_pk: None,
            link: None,
            game_type: None,
            season: None,
            game_date: None,
            status: None,
            teams: None,
            venue: None,
            content: None,
        }
    }
}


