/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct TeamStatsRankings {
    #[serde(rename = "gamesPlayed", skip_serializing_if = "Option::is_none")]
    pub games_played: Option<String>,
    #[serde(rename = "wins", skip_serializing_if = "Option::is_none")]
    pub wins: Option<String>,
    #[serde(rename = "losses", skip_serializing_if = "Option::is_none")]
    pub losses: Option<String>,
    #[serde(rename = "ot", skip_serializing_if = "Option::is_none")]
    pub ot: Option<String>,
    #[serde(rename = "pts", skip_serializing_if = "Option::is_none")]
    pub pts: Option<String>,
    #[serde(rename = "ptPctg", skip_serializing_if = "Option::is_none")]
    pub pt_pctg: Option<String>,
    #[serde(rename = "goalsPerGame", skip_serializing_if = "Option::is_none")]
    pub goals_per_game: Option<String>,
    #[serde(rename = "goalsAgainstPerGame", skip_serializing_if = "Option::is_none")]
    pub goals_against_per_game: Option<String>,
    #[serde(rename = "evGGARatio", skip_serializing_if = "Option::is_none")]
    pub ev_gga_ratio: Option<String>,
    #[serde(rename = "powerPlayPercentage", skip_serializing_if = "Option::is_none")]
    pub power_play_percentage: Option<String>,
    #[serde(rename = "powerPlayGoals", skip_serializing_if = "Option::is_none")]
    pub power_play_goals: Option<String>,
    #[serde(rename = "powerPlayGoalsAgainst", skip_serializing_if = "Option::is_none")]
    pub power_play_goals_against: Option<String>,
    #[serde(rename = "powerPlayOpportunities", skip_serializing_if = "Option::is_none")]
    pub power_play_opportunities: Option<String>,
    #[serde(rename = "penaltyKillPercentage", skip_serializing_if = "Option::is_none")]
    pub penalty_kill_percentage: Option<String>,
    #[serde(rename = "shotsPerGame", skip_serializing_if = "Option::is_none")]
    pub shots_per_game: Option<String>,
    #[serde(rename = "shotsAllowed", skip_serializing_if = "Option::is_none")]
    pub shots_allowed: Option<String>,
    #[serde(rename = "winScoreFirst", skip_serializing_if = "Option::is_none")]
    pub win_score_first: Option<String>,
    #[serde(rename = "winOppScoreFirst", skip_serializing_if = "Option::is_none")]
    pub win_opp_score_first: Option<String>,
    #[serde(rename = "winLeadFirstPer", skip_serializing_if = "Option::is_none")]
    pub win_lead_first_per: Option<String>,
    #[serde(rename = "winLeadSecondPer", skip_serializing_if = "Option::is_none")]
    pub win_lead_second_per: Option<String>,
    #[serde(rename = "winOutshootOpp", skip_serializing_if = "Option::is_none")]
    pub win_outshoot_opp: Option<String>,
    #[serde(rename = "winOutshotByOpp", skip_serializing_if = "Option::is_none")]
    pub win_outshot_by_opp: Option<String>,
    #[serde(rename = "faceOffsTaken", skip_serializing_if = "Option::is_none")]
    pub face_offs_taken: Option<String>,
    #[serde(rename = "faceOffsWon", skip_serializing_if = "Option::is_none")]
    pub face_offs_won: Option<String>,
    #[serde(rename = "faceOffsLost", skip_serializing_if = "Option::is_none")]
    pub face_offs_lost: Option<String>,
    #[serde(rename = "faceOffWinPercentage", skip_serializing_if = "Option::is_none")]
    pub face_off_win_percentage: Option<String>,
    #[serde(rename = "shootingPctRank", skip_serializing_if = "Option::is_none")]
    pub shooting_pct_rank: Option<String>,
    #[serde(rename = "savePctRank", skip_serializing_if = "Option::is_none")]
    pub save_pct_rank: Option<String>,
}

impl TeamStatsRankings {
    pub fn new() -> TeamStatsRankings {
        TeamStatsRankings {
            games_played: None,
            wins: None,
            losses: None,
            ot: None,
            pts: None,
            pt_pctg: None,
            goals_per_game: None,
            goals_against_per_game: None,
            ev_gga_ratio: None,
            power_play_percentage: None,
            power_play_goals: None,
            power_play_goals_against: None,
            power_play_opportunities: None,
            penalty_kill_percentage: None,
            shots_per_game: None,
            shots_allowed: None,
            win_score_first: None,
            win_opp_score_first: None,
            win_lead_first_per: None,
            win_lead_second_per: None,
            win_outshoot_opp: None,
            win_outshot_by_opp: None,
            face_offs_taken: None,
            face_offs_won: None,
            face_offs_lost: None,
            face_off_win_percentage: None,
            shooting_pct_rank: None,
            save_pct_rank: None,
        }
    }
}


