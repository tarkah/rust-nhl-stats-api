/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct GameLiveData {
    #[serde(rename = "plays", skip_serializing_if = "Option::is_none")]
    pub plays: Option<crate::models::GameLiveDataPlays>,
    #[serde(rename = "linescore", skip_serializing_if = "Option::is_none")]
    pub linescore: Option<crate::models::GameLinescore>,
    #[serde(rename = "boxscore", skip_serializing_if = "Option::is_none")]
    pub boxscore: Option<crate::models::GameBoxscore>,
    #[serde(rename = "decisions", skip_serializing_if = "Option::is_none")]
    pub decisions: Option<crate::models::GameLiveDataDecisions>,
}

impl GameLiveData {
    pub fn new() -> GameLiveData {
        GameLiveData {
            plays: None,
            linescore: None,
            boxscore: None,
            decisions: None,
        }
    }
}


