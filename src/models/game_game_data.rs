/*
 * NHL API
 *
 * Documenting the publicly accessible portions of the NHL API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */



#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct GameGameData {
    #[serde(rename = "game", skip_serializing_if = "Option::is_none")]
    pub game: Option<crate::models::GameGameDataGame>,
    #[serde(rename = "datetime", skip_serializing_if = "Option::is_none")]
    pub datetime: Option<crate::models::GameGameDataDatetime>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::GameGameDataStatus>,
    #[serde(rename = "teams", skip_serializing_if = "Option::is_none")]
    pub teams: Option<crate::models::GameGameDataTeams>,
    #[serde(rename = "players", skip_serializing_if = "Option::is_none")]
    pub players: Option<crate::models::Player>,
    #[serde(rename = "venue", skip_serializing_if = "Option::is_none")]
    pub venue: Option<crate::models::GameGameDataVenue>,
}

impl GameGameData {
    pub fn new() -> GameGameData {
        GameGameData {
            game: None,
            datetime: None,
            status: None,
            teams: None,
            players: None,
            venue: None,
        }
    }
}


